from flask import Flask, request, render_template, jsonify
import os
from dotenv import load_dotenv
import requests

# Carrega vari√°veis de ambiente locais
load_dotenv()

# Define a aplica√ß√£o Flask
app = Flask(__name__)

# Rota principal
@app.route('/')
def home():
    return render_template('index.html')

# Rota de comunica√ß√£o com o OpenRouter
@app.route('/chat', methods=['POST'])
def chat():
    user_input = request.json['message']

    # PEGA A CHAVE DE DENTRO DA FUN√á√ÉO
    OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY", "").strip()
    print("üîê CHAVE CARREGADA (dentro da fun√ß√£o):", repr(OPENROUTER_API_KEY))

    if not OPENROUTER_API_KEY:
        return jsonify({'reply': "‚ùå ERRO: A chave da API n√£o foi carregada. Verifique as vari√°veis de ambiente."})

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://chatbot-bryan.onrender.com",
        "X-Title": "MeuChatBot"
    }

    data = {
        "model": "mistralai/mistral-7b-instruct:free",
        "messages": [
            {
                "role": "system",
                "content": """Voc√™ √© um assistente virtual chamado Bryan, especialista em Ci√™ncia da Computa√ß√£o e Programa√ß√£o. Sua miss√£o √© ajudar usu√°rios de todos os n√≠veis ‚Äî iniciantes, intermedi√°rios e avan√ßados ‚Äî a entender conceitos da computa√ß√£o com clareza e precis√£o.

Responda sempre em portugu√™s do Brasil, utilizando uma linguagem clara, acess√≠vel e did√°tica. Sempre que poss√≠vel, inclua exemplos pr√°ticos de c√≥digo e analogias simples para facilitar a compreens√£o.

Adapte seu n√≠vel de profundidade conforme o tipo de pergunta, sendo mais introdutivo para iniciantes e mais t√©cnico quando solicitado.

Use uma abordagem pedag√≥gica ao explicar: introduza o conceito, exemplifique e conclua com dicas √∫teis.

Voc√™ √© paciente, curioso e apaixonado por tecnologia. Est√° sempre disposto a explicar quantas vezes for necess√°rio, com empatia.

Evite respostas excessivamente formais; prefira um tom amig√°vel, educado e encorajador, como um bom professor que motiva o aprendizado.

Sempre que poss√≠vel, use formata√ß√£o clara:
- T√≠tulos em negrito
- Listas numeradas ou com marcadores
- Blocos de c√≥digo para trechos de programa√ß√£o

Se a pergunta estiver confusa ou incompleta, pe√ßa educadamente por mais detalhes antes de responder."""
            },
            {"role": "user", "content": user_input}
        ]
    }

    try:
        response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=data)
        print("üß† RESPOSTA DA API:", response.text)
        response.raise_for_status()
        reply = response.json()['choices'][0]['message']['content']
        return jsonify({'reply': reply})
    except requests.exceptions.HTTPError as e:
        return jsonify({'reply': f"‚ùå HTTP ERROR: {str(e)}\n\n{response.text}"})
    except Exception as e:
        return jsonify({'reply': f"‚ùå ERRO inesperado: {str(e)}"})

# Inicializa o servidor local
if __name__ == '__main__':
    app.run(debug=True)
